@model IEnumerable<PersonaKey.EntityLayer.Concrete.Person>

@{
    ViewData["Title"] = "Personel Listesi";
    var departments = ViewBag.Departments as List<PersonaKey.EntityLayer.Concrete.Department>;
    var roles = ViewBag.Roles as List<PersonaKey.EntityLayer.Concrete.Role>;
}

<div class="bg-white rounded-lg shadow p-4 max-w-full overflow-auto">
    <h2>Personel Listesi</h2>

    <p>
        @if (User.HasClaim("CanEditSite", "True"))
        {
            <a asp-action="Create" class="btn btn-primary">Yeni Personel Ekle</a>
        }
    </p>
    <table class="table table-striped mb-0">
        <thead>
            <tr>
                <th>Ad Soyad</th>
                <th>Email</th>
                <th>Departman</th>
                <th>Rol</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in Model)
            {
                var departmentName = departments?.FirstOrDefault(d => d.Id == person.DepartmentId)?.Name ?? "Bilinmiyor";
                var roleName = roles?.FirstOrDefault(r => r.Id == person.RoleId)?.Name ?? "Bilinmiyor";

                <tr>
                    <td>@person.FullName</td>
                    <td>@person.Email</td>
                    <td>@departmentName</td>
                    <td>@roleName</td>
                    <td>
                        @if (User.HasClaim("CanEditSite", "True"))
                        {
                            <a asp-action="Update" asp-route-id="@person.Id" class="btn btn-sm btn-warning">Düzenle</a>
                            <a href="#" class="btn btn-sm btn-danger">Sil</a> 
                        }
                        else
                        {
                            <span class="text-danger"><i class="relative top-0 text-sm leading-normal text-red-500 ni ni-lock-circle-open"></i> Yetkiniz yok</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
