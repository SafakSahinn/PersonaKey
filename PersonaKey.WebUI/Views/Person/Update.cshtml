@model PersonaKey.EntityLayer.Concrete.Person

@{
    ViewData["Title"] = "Kişi Güncelle";
    var departments = ViewBag.Departments as List<PersonaKey.EntityLayer.Concrete.Department>;
    var roles = ViewBag.Roles as List<PersonaKey.EntityLayer.Concrete.Role>;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Update" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DepartmentId">Departman</label>
        <select asp-for="DepartmentId" class="form-control">
            <option value="">Seçiniz</option>
            @foreach (var dept in departments)
            {
                <option value="@dept.Id" selected="@(dept.Id == Model.DepartmentId)">
                    @dept.Name
                </option>
            }
        </select>
        <span asp-validation-for="DepartmentId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="RoleId">Rol</label>
        <select asp-for="RoleId" class="form-control">
            <option value="">Seçiniz</option>
            @foreach (var role in roles)
            {
                <option value="@role.Id" selected="@(role.Id == Model.RoleId)">
                    @role.Name
                </option>
            }
        </select>
        <span asp-validation-for="RoleId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Güncelle</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
